plugins {
    id 'java'
    id 'java-library'
}

group = 'snw.srs'
version = '1.0.0'

def adventureVer = "4.17.0"
repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
}

def lombok = "org.projectlombok:lombok:1.18.32"
dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"

    api "net.kyori:adventure-api:$adventureVer"
    api "net.kyori:adventure-text-serializer-gson:$adventureVer"

    compileOnly lombok
    annotationProcessor lombok

    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.0-M2'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.20:3.9.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test {
    useJUnitPlatform()
}
